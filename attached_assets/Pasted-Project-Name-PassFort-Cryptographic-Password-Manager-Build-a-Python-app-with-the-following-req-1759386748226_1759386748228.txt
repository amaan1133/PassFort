<div class="panel" style="margin-top: 20px;">
            <h2>🛡️ Phishing Detector</h2>
            <p style="color: #666; margin-bottom: 15px;">Check URLs for phishing attempts before entering passwords</p>
            
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                <div>
                    <h3 style="color: #667eea; margin-bottom: 15px;">🔍 Check URL</h3>
                    <input type="text" id="checkUrl" placeholder="https://example.com/login">
                    <button class="btn btn-info" onclick="checkPhishing()">🔍 Analyze URL</button>
                    
                    <div id="phishingResult" style="margin-top: 20px;"></div>
                </div>
                
                <div>
                    <h3 style="color: #667eea; margin-bottom: 15px;">➕ Add to Phishing Database</h3>
                    <input type="text" id="addPhishingUrl" placeholder="https://fake-paypal.com">
                    <select id="threatType" class="btn btn-secondary" style="text-align: left; margin: 10px 0;">
                        <option value="phishing">Phishing</option>
                        <option value="malware">Malware</option>
                        <option value="scam">Scam</option>
                        <option value="typosquatting">Typosquatting</option>
                    </select>
                    <button class="btn btn-danger" onclick="addPhishingUrl()">Add to Database</button>
                    
                    <h3 style="color: #667eea; margin: 20px 0 15px 0;">📊 Phishing Database</h3>
                    <div id="phishingDatabase" style="max-height: 300px; overflow-y: auto;"></div>
                </div>
            </div>
        </div>

            border: 2px solid #e9ecef;
            font-family: 'Courier New', monospace;
            font-size: 0.8em;
            word-break: break-all;
            max-height: 150px;
            overflow-y: auto;
            color: #212529;
        }

        .key-section .hash-value {
            background: #e7f5ff;
            color: #1971c2;
        }

        .key-actions {
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>🔐 PassFort</h1>
            <p class="subtitle">Secure Password Manager with Unique RSA Keys & SHA-256 Hashing</p>
        </header>

        <div class="main-grid">
            <div class="panel">
                <h2>💾 Save New Password</h2>
                <button class="btn btn-primary" onclick="showSaveModal()">Add New Password</button>
                <button class="btn btn-success" onclick="generatePassword()">Generate Strong Password</button>
                
                <h2 style="margin-top: 30px;">📋 Saved Passwords</h2>
                <div class="password-list" id="passwordList"></div>
            </div>

            <div class="panel">
                <h2>🔓 Unlock Password</h2>
                <p style="color: #666; margin-bottom: 15px;">Select a password and enter its unique RSA key to unlock</p>
                <button class="btn btn-info" onclick="showUnlockModal()">Unlock with RSA Key</button>
                
                <h2 style="margin-top: 30px;">📊 Activity Log</h2>
                <div class="log-area" id="log"></div>
            </div>
        </div>

        <div class="panel" style="margin-top: 20px;">
            <h2>🔑 Stored RSA Keys & Password Hashes</h2>
            <p style="color: #666; margin-bottom: 15px;">Keep these keys safe! You need the Private Key to recover passwords in the future.</p>
            <div id="keysStorage"></div>
        </div>
    </div>

    <!-- Save Password Modal -->
    <div id="saveModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('saveModal')">&times;</span>
            <h2>💾 Save New Password</h2>
            <label>Service/Website Name:</label>
            <input type="text" id="serviceName" placeholder="e.g., Gmail, Facebook, Netflix">
            <label>Password (leave empty to auto-generate):</label>
            <input type="password" id="passwordInput" placeholder="Enter password or leave empty">
            <button class="btn btn-primary" onclick="savePassword()">Save & Generate RSA Key</button>
        </div>
    </div>

    <!-- RSA Keys Display Modal -->
    <div id="keysModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('keysModal')">&times;</span>
            <h2>🔑 Your Unique RSA Keys</h2>
            <div class="alert alert-warning">
                ⚠️ <strong>Important:</strong> Save your private key securely! You need it to unlock this password.
            </div>
            <label>RSA Key Name:</label>
            <div class="key-display" id="rsaKeyName" style="background: #e7f5ff; color: #1971c2;"></div>
            <label>Private Key (Save This!):</label>
            <div class="key-display" id="privateKey"></div>
            <button class="btn-small btn-info" onclick="copyToClipboard('privateKey')">📋 Copy Private Key</button>
            <label>Public Key:</label>
            <div class="key-display" id="publicKey"></div>
            <button class="btn-small btn-info" onclick="copyToClipboard('publicKey')">📋 Copy Public Key</button>
            <button class="btn btn-success" onclick="closeModal('keysModal')">Done</button>
        </div>
    </div>

    <!-- Unlock Password Modal -->
    <div id="unlockModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('unlockModal')">&times;</span>
            <h2>🔓 Unlock Password</h2>
            <label>Select Password:</label>
            <select id="passwordSelect" class="btn btn-secondary" style="text-align: left;">
                <option value="">-- Select a password --</option>
            </select>
            <label>Enter RSA Private Key:</label>
            <textarea id="unlockPrivateKey" placeholder="-----BEGIN PRIVATE KEY-----&#10;...&#10;-----END PRIVATE KEY-----"></textarea>
            <button class="btn btn-info" onclick="unlockPassword()">🔓 Unlock Password</button>
        </div>
    </div>

    <!-- Unlocked Password Modal -->
    <div id="unlockedModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('unlockedModal')">&times;</span>
            <h2>✅ Password Unlocked</h2>
            <div class="alert alert-success" id="unlockedInfo"></div>
            <label>Password:</label>
            <div class="key-display" id="unlockedPassword" style="font-size: 1.2em; color: #2b8a3e;"></div>
            <button class="btn-small btn-success" onclick="copyToClipboard('unlockedPassword')">📋 Copy Password</button>
            <label>SHA-256 Hash:</label>
            <div class="key-display" id="passwordHash"></div>
            <button class="btn btn-primary" onclick="closeModal('unlockedModal')">Close</button>
        </div>
    </div>

    <script>
        function log(message) {
            const logBox = document.getElementById('log');
            const timestamp = new Date().toLocaleTimeString();
            logBox.innerHTML += `[${timestamp}] ${message}\n`;
            logBox.scrollTop = logBox.scrollHeight;
        }

        function loadServices() {
            fetch('/api/services')
                .then(r => r.json())
                .then(data => {
                    if (data.success) {
                        const list = document.getElementById('passwordList');
                        const select = document.getElementById('passwordSelect');
                        const keysStorage = document.getElementById('keysStorage');
                        
                        if (data.services.length === 0) {
                            list.innerHTML = '<p style="color: #adb5bd;">No passwords saved yet.</p>';
                            keysStorage.innerHTML = '<p style="color: #adb5bd;">No RSA keys stored yet.</p>';
                            return;
                        }
                        
                        list.innerHTML = '';
                        select.innerHTML = '<option value="">-- Select a password --</option>';
                        keysStorage.innerHTML = '';
                        
                        data.services.forEach(s => {
                            list.innerHTML += `
                                <div class="password-item">
                                    <h3>🔒 ${s.service}</h3>
                                    <p class="rsa-name">🔑 ${s.rsa_name}</p>
                                    <p>📅 ${new Date(s.created_at).toLocaleString()}</p>
                                    <button class="btn-small btn-danger" onclick="deletePassword(${s.id})">Delete</button>
                                </div>
                            `;
                            
                            select.innerHTML += `<option value="${s.id}">${s.service} - ${s.rsa_name}</option>`;

                            // Add to keys storage section
                            keysStorage.innerHTML += `
                                <div class="key-storage-item">
                                    <h3>🔐 ${s.service}</h3>
                                    <p style="color: #51cf66; font-weight: bold; margin-bottom: 10px;">📛 ${s.rsa_name}</p>
                                    
                                    <div class="key-section">
                                        <label>🔑 RSA Private Key (Save this to recover password!):</label>
                                        <div class="key-value" id="stored-private-${s.id}">${s.private_key || 'Loading...'}</div>
                                        <div class="key-actions">
                                            <button class="btn-small btn-info" onclick="copyToClipboard('stored-private-${s.id}')">📋 Copy Private Key</button>
                                            <button class="btn-small btn-success" onclick="downloadKey(${s.id}, '${s.service}', 'private')">💾 Download Private Key</button>
                                        </div>
                                    </div>
                                    
                                    <div class="key-section">
                                        <label>🔓 RSA Public Key:</label>
                                        <div class="key-value" id="stored-public-${s.id}">${s.public_key || 'Loading...'}</div>
                                        <div class="key-actions">
                                            <button class="btn-small btn-info" onclick="copyToClipboard('stored-public-${s.id}')">📋 Copy Public Key</button>
                                        </div>
                                    </div>
                                    
                                    <div class="key-section">
                                        <label>#️⃣ Password Hash (SHA-256):</label>
                                        <div class="key-value hash-value" id="stored-hash-${s.id}">${s.password_hash || 'Loading...'}</div>
                                        <div class="key-actions">
                                            <button class="btn-small btn-info" onclick="copyToClipboard('stored-hash-${s.id}')">📋 Copy Hash</button>
                                        </div>
                                    </div>
                                </div>
                            `;
                        });
                    }
                });
        }

        function savePassword() {
            const service = document.getElementById('serviceName').value;
            const password = document.getElementById('passwordInput').value;
            
            if (!service) {
                alert('Service name is required');
                return;
            }

            fetch('/api/save-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ service, password })
            })
            .then(r => r.json())
            .then(data => {
                if (data.success) {
                    log(`✅ Password saved for ${service}`);
                    log(`🔑 RSA Key: ${data.rsa_key_name}`);
                    log(`#️⃣  Password hashed with SHA-256`);
                    
                    document.getElementById('rsaKeyName').textContent = data.rsa_key_name;
                    document.getElementById('privateKey').textContent = data.private_key;
                    document.getElementById('publicKey').textContent = data.public_key;
                    
                    closeModal('saveModal');
                    document.getElementById('serviceName').value = '';
                    document.getElementById('passwordInput').value = '';
                    document.getElementById('keysModal').style.display = 'block';
                    
                    if (data.generated_password) {
                        log(`🔐 Auto-generated password: ${data.generated_password}`);
                    }
                    
                    loadServices();
                } else {
                    alert('Error: ' + data.error);
                }
            });
        }

        function unlockPassword() {
            const passwordId = document.getElementById('passwordSelect').value;
            const privateKey = document.getElementById('unlockPrivateKey').value;
            
            if (!passwordId || !privateKey) {
                alert('Please select a password and enter the private key');
                return;
            }

            fetch('/api/unlock-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ password_id: passwordId, private_key: privateKey })
            })
            .then(r => r.json())
            .then(data => {
                if (data.success) {
                    log(`🔓 Unlocked password for ${data.service}`);
                    
                    document.getElementById('unlockedInfo').innerHTML = `
                        <strong>Service:</strong> ${data.service}<br>
                        <strong>Status:</strong> Password decrypted and verified successfully
                    `;
                    document.getElementById('unlockedPassword').textContent = data.password;
                    document.getElementById('passwordHash').textContent = data.hash;
                    
                    closeModal('unlockModal');
                    document.getElementById('unlockPrivateKey').value = '';
                    document.getElementById('unlockedModal').style.display = 'block';
                } else {
                    alert('Error: ' + data.error);
                    log(`❌ Failed to unlock: ${data.error}`);
                }
            });
        }

        function deletePassword(id) {
            if (!confirm('Are you sure you want to delete this password?')) return;
            
            fetch(`/api/delete-password/${id}`, { method: 'DELETE' })
                .then(r => r.json())
                .then(data => {
                    if (data.success) {
                        log('🗑️ Password deleted');
                        loadServices();
                    } else {
                        alert('Error: ' + data.error);
                    }
                });
        }

        function generatePassword() {
            fetch('/api/generate-password')
                .then(r => r.json())
                .then(data => {
                    if (data.success) {
                        navigator.clipboard.writeText(data.password);


        function checkPhishing() {
            const url = document.getElementById('checkUrl').value;
            
            if (!url) {
                alert('Please enter a URL to check');
                return;
            }

            fetch('/api/check-url', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.strin
